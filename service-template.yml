apiVersion: v1
kind: Template
metadata:
  name: operatorhub-catalog
  annotations:
    description: "A template to instantiate Jenkins for running the Operator Catalog Creation Job"
    tags: "jenkins,operatorhub,operators,catalog"
labels:
  app: operatorhub-catalog
parameters:
- description: ""
  name: NAME
  required: true
  value: "operatorhub-catalog"
- description: "Random 4 char string to append to NAME"
  name: RANDOM
  generate: expression
  from: "[a-zA-Z0-9]{5}"
- description: "The image name:tag"
  name: "IMAGE"
  required: true
- description: "filename for the catalog tar.gz file the job will create"
  name: "CATALOG_NAME"
  required: true
- description: "script to invoke after file is created. can be used to push to some repo"
  name: "POST_CATALOG_CREATION_SCRIPT"
  required: true
  value: >-
             curl -k -u admin:password -T "https://ear-demo.apps.ocp.lshulmanrh.com/artifactory/generic-local/operatorhub.tar.gz"
- description: "name for mirrors.json file as ConfigMap for mirroring the catalog images"
  name: "MIRROR_CONFIG_MAP_NAME"
  required: false
  value: "catalog-mirrors"
objects:
#- apiVersion: v1
#  kind: PersistentVolumeClaim
#  metadata:
#    name: ${NAME}
#  spec:
#    accessModes:
#    - ReadWriteOnce
#    resources:
#      requests:
#        storage: 300Mi
#    storageClassName: thin
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  data:
    mirrors.json: |
      {
      }
  kind: ConfigMap
  metadata:
    name: ${MIRROR_CONFIG_MAP_NAME}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${NAME}
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: ${NAME}
        name: ${NAME}
      spec:
        securityContext:
          fsGroup: 1000
        volumes:
#          - name: jenkins-volume-1
#            emptyDir: {}i
#          - name: operatorhub
#            persistentVolumeClaim:
#              claimName: "${NAME}"
          - name: catalog-mirrors
            configMap:
              name: catalog-mirrors
        containers:
        - env:
          - name: CATALOG_NAME 
            value: ${CATALOG_NAME}
          - name: POST_CATALOG_CREATION_SCRIPT
            value: ${POST_CATALOG_CREATION_SCRIPT}
          image: ${IMAGE}
          imagePullPolicy: Always
          name: ${NAME}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources:
            requests:
          volumeMounts:
#            - mountPath: "/var/jenkins_home/operatorhub/"
#              name: operatorhub
#            - name: jenkins-volume-1
#              mountPath: /var/jenkins_home
            - name: catalog-mirrors
              mountPath: /var/jenkins_home/mirroring/
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    port:
      targetPort: http
    to:
      kind: Service
      name: ${NAME}
      weight: 100
    wildcardPolicy: None
